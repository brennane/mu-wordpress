# Define parameters for a mu pipeline
# https://github.com/stelligent/mu/wiki/Pipelines

## See https://github.com/stelligent/mu/wiki/Environments
environments:
- name: test
  ### Attributes for the ECS container instances
  cluster:
    #### name of EC2 keypair to associate with ECS container instances.
    #### Launches bastion host if defined. (default: none)
    keyName: mu-wordpress
- name: prod
  cluster:
    keyName: mu-wordpress

## See https://github.com/stelligent/mu/wiki/Services
service:
  name: mu-wordpress

  ### The endpoint inside the container to determine if the task is healthy
  ### (default: /health)
  ### Default is "/health", which isn't going to be valid under WordPress
  healthEndpoint: /robots.txt

  ### The port to expose from the container
  ### (default: 8080)
  ### - The WordPress web service runs on port 80
  port: 80

  ### The paths to match on in the ALB and route to this service
  ### (default: None)
  ### - We want all traffic to be sent to the containers,
  ###   but perhaps we can send media requests elsewhere?
  pathPatterns:
  - /*

  ### See https://github.com/stelligent/mu/wiki/Databases
  database:
    #### Name of database to create on RDS instance
    name: muwp

    #### RDS engine to use
    #### (default: aurora)
    #engine: mysql

    #### Instance class
    #### (default: db.t2.small)
    #instanceClass: db.t2.medium

  ### Environment variables exposed to the containers running in ECS
  environment:
    WORDPRESS_DB_USER: ${DatabaseMasterUsername}
    WORDPRESS_DB_PASSWORD: ${DatabaseMasterPassword}
    WORDPRESS_DB_HOST: ${DatabaseEndpointAddress}:${DatabaseEndpointPort}
    WORDPRESS_DB_NAME: ${DatabaseName}

  ### See https://github.com/stelligent/mu/wiki/Pipelines
  pipeline:
    source:
      #### GitHub or CodeCommit
      #### (default: GitHub)
      provider: GitHub

      #### The GitHub repo slug or CodeCommit repo name to build
      #### (default: none)
      repo: brennane/mu-wordpress
      #### The GitHub branch to use (default: master)
      branch: master

    acceptance:
      #### The environment name to deploy to for testing
      #### (default: dev)
      environment: test
    production:
      #### The environment name to deploy to for production
      #### (default: production)
      environment: prod
